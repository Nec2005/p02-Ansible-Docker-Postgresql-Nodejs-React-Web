---
- name: configure postgres node
  hosts: ansible_postgresql
  become: yes
  vars_files:
    - secret.yaml
  tasks:
    - name: upgrade all packages
      yum:
        name: "*"
        state: latest
    - name: Remove docker if installed from CentOS repo
      yum:
        name: 
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed
    - name: Install yum utils
      yum:
        name: yum-utils
        state: latest 

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo

    - name: Install Docker
      package:
        name: docker-ce
        state: latest
    
    - name: pip install
      package:
        name: python3-pip
        state: present
    
    - name: Install docker-SDK
      pip:
        name: docker
    
    - name: Add user ec2-user to docker group
      user:
        name: ec2-user
        group: docker
        append: yes
    
    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: create directory
      file:
        path: /home/ec2-user/postgresql
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: copy sql script
      copy:
        src: /home/ec2-user/Ansible-project/project_files/database/init.sql
        dest: /home/ec2-user/postgresql
    
    - name: copy Dockerfile
      copy:
        src: /home/ec2-user/Ansible-project/solution_files/1_wide_solution/postgre_files/Dockerfile
        dest: /home/ec2-user/postgresql

    - name: remove nec_postgre container and nec2005/postgre if exists
      shell: "docker ps -q --filter 'name=nec_postgre' | grep -q . && docker stop nec_postgre && docker rm -fv nec_postgre && docker image rm -f nec2005/postgre || echo 'Not Found'"

    - name: build container image
      docker_image:
        name: nec2005/postgre
        build:
          path: /home/ec2-user/postgresql
        state: present
        source: build

    - name: Launch docker container
      docker_container:
        name: nec_postgre
        image: nec2005/postgre
        volumes:
          - /db-data:/var/lib/postgresql/data
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ password }}"
      register: container_info
    
    - name: print container info
      debug:
        var: container_info


      
